@model MSIdentity.Models.ProductViewModel
@*@model PagedList.IPagedList<MSIdentity.Models.Product>*@
@using PagedList.Mvc;

@Html.AntiForgeryToken()


@helper SortLink(string name, int id)
{
    @Ajax.ActionLink(name, "Index",
        new { Sortby = id, isasc = (id != @Model.SearchRequestModel.SortBy || (!@Model.SearchRequestModel.IsAsc)), @Model.SearchRequestModel.CategoryId, @Model.SearchRequestModel.PageSize },
        new AjaxOptions

        {
            UpdateTargetId = "gridContent", // <-- DOM element ID to update

            InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element

            HttpMethod = "GET", // <-- HTTP method

        })
    if (id == @Model.SearchRequestModel.SortBy)
    {
        <span class="arrow @(@Model.SearchRequestModel.IsAsc ? "up" : "down")"></span>
    }

}


<div id="gridContent">
    <p>Total Number of records: @Model.TotalNoOfRec</p>
    <br />
    <input type="hidden" id="SortBy" name="SortBy" value="@Model.SearchRequestModel.SortBy" />
    <input type="hidden" id="CategoryId" name="CategoryId" value="@Model.SearchRequestModel.CategoryId" />
    <input type="hidden" id="IsAsc" name="IsAsc" value="@Model.SearchRequestModel.IsAsc" />
    <input type="hidden" id="PageSize" name="PageSize" value="@Model.SearchRequestModel.PageSize" />
    <input type="hidden" id="PageCount" name="PageCount" value="@Model.ProductList.PageCount" />
    <input type="hidden" id="DeleteItemId" name="DeleteItemId" value="" />
    <input type="hidden" id="CurrentPageNumber" name="CurrentPageNumber" value=@Model.SearchRequestModel.PageNo />
    <table class="grid-content-table">
        <tr>
            <th> @SortLink("Name", 1) </th>
            <th> @SortLink("Description", 2)  </th>
            <th> @SortLink("Price", 3)</th>
            <th> @SortLink("Category Name", 4)</th>

            <th> Edit/Delete</th>
        </tr>


        @foreach (var item in Model.ProductList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.ActionLink(item.Description, "Delete", new { id = item.Id })

                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    
                    @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "edit" }) |
                    <a class="delete" href=""  data-delete-id="@item.Id"></a>
                  
                    @*<a class="delete" href="@Url.Action("Delete", new {id = item.Id})"></a>*@
                   
                </td>
            </tr>
        }
        <tfoot id="footer">
            <tr>
                <td></td>
                <td></td>
                <td>Total Price: @Model.TotalPrice</td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>

    </table>
    <br />
    <div id="myPager">
         <table id="pager-table">
            <tr>
                <td style="width: 25%">Page @(Model.ProductList.PageCount < Model.ProductList.PageNumber ? 0 : Model.ProductList.PageNumber) of @Model.ProductList.PageCount</td>
                <td style="width: 50%">
                    @Html.PagedListPager(Model.ProductList, PageNo => Url.Action("Index", new { PageNo, @Model.SearchRequestModel.SortBy, @Model.SearchRequestModel.IsAsc, @Model.SearchRequestModel.CategoryId,@Model.SearchRequestModel.PageSize }),
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "gridContent" })
                        )
                    @*@Html.PagedListPager(Model.ProductList, PageNo => Url.Action("Index",
                        new { PageNo, @Model.SearchRequestModel.SortBy, @Model.SearchRequestModel.IsAsc, @Model.SearchRequestModel.CategoryId }))*@
                </td>
                <td>
                    @Html.DropDownListFor(m => m.SearchRequestModel.PageSize, new List<SelectListItem>
                    {
                        new SelectListItem{Text="5",Value="5"},
                        new SelectListItem{Text="10",Value="10"},
                        new SelectListItem{Text="15",Value="15"},
                        new SelectListItem{Text="20",Value="20"}
                    })


                </td>
                <td>
                 

                        <p>
                            @Html.TextBox("PageNo", @Model.SearchRequestModel.PageNo , null, new { style = "width:40px", id = "UserPageInput" })\@Model.ProductList.PageCount
                        </p>

                   
                </td>
            </tr>
        </table>
    </div>
    <script>
        InitializePage();
    </script>
  
</div>

